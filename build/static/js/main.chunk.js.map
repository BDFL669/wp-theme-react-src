{"version":3,"file":"static/js/main.chunk.js","sources":["C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/App.css","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/App.js","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/context/Context.js","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/context/WithConsumer.js","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/index.css","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/index.js","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/partials/Footer.js","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/partials/HomePost.js","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/partials/Loader.js","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/partials/Pager.js","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/partials/PostMeta.js","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/partials/RootLayout.js","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/partials/TheHomeLoop.js","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/partials/TheLoop.js","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/partials/ThePost.js","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/serviceWorker.js","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/styling/Loader.css","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/templates/About.js","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/templates/Blog.js","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/templates/Home.js","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/templates/Login.js","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/templates/NotFound.js","C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/templates/SinglePost.js"],"sourcesContent":["// extracted by mini-css-extract-plugin","import React from \"react\";\nimport {\n    createBrowserRouter, \n    createRoutesFromElements,\n    Route, \n    RouterProvider\n  } from 'react-router-dom';\nimport Home from \"./templates/Home\";\nimport \"./App.css\";\nimport About from \"./templates/About\";\nimport Blog from \"./templates/Blog\";\nimport RootLayout from \"./partials/RootLayout\";\nimport NotFound from \"./templates/NotFound\";\nimport Login from \"./templates/Login\";\nimport SinglePost from \"./templates/SinglePost\";\n\nconst router = createBrowserRouter(\n    createRoutesFromElements(\n        <Route path=\"/wordpress\" element={<RootLayout />}>\n        <Route path=\"/wordpress\" index element={<Home />} />\n        <Route path=\"/wordpress/about\" element={<About />} />  \n        <Route path=\"/wordpress/blog\" element={<Blog />} />\n        <Route path=\"/wordpress/signin\" element={<Login />} />\n        <Route path=\"/wordpress/post/:slug\" element={<SinglePost />} />\n        <Route path=\"/wordpress/*\" element={<NotFound />} />\n        </Route>\n    )\n  )\nfunction App() {\n    return (\n        <RouterProvider router={router} />\n        \n    );\n}\n\nexport default App;\n","import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst storeContext = React.createContext();\r\nexport const Consumer = storeContext.Consumer;\r\nAxios.defaults.baseURL = 'http://localhost/wordpress';\r\n\r\nexport const Provider = (props) => {\r\n  const params = useParams();\r\n\r\n  const [term, setTerm] = useState('');\r\n  const [slug, setSlug] = useState('');\r\n  const [restType, setRestType] = useState('');\r\n  const [catid, setCatid] = useState('');\r\n  const [route, setRoute] = useState('');\r\n  const [posts, setPosts] = useState([]);\r\n  const [comments, setComments] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [commentFields, setCommentFields] = useState({\r\n    fullName: '',\r\n    email: '',\r\n    website: '',\r\n    comment: ''\r\n  });\r\n  const [appError, setAppError] = useState('');\r\n  const [commentErrors, setCommentErrors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setRestType(getRestType(params.path));\r\n    setRoute(params.path);\r\n    setSlug(params.slug ? params.slug : '');\r\n    setTerm(params.term ? params.term : '');\r\n    setCatid(params.catid ? params.catid : '');\r\n  }, [params]);\r\n\r\n  useEffect(() => {\r\n    getPosts(buildUrl());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [restType, currentPage, catid]);\r\n\r\n  const getRestType = (path) => {\r\n    let restType = 'post';\r\n    switch (path) {\r\n      case '/page/:slug':\r\n        restType = 'page';\r\n        break;\r\n      case '/search/:term':\r\n        restType = 'search';\r\n        break;\r\n      case '/category/:catid':\r\n        restType = 'category';\r\n        break;\r\n      case '/post/:slug':\r\n      default:\r\n        restType = 'post';\r\n        break;\r\n    }\r\n    return restType;\r\n  };\r\n\r\n  const updateTerm = (term) => {\r\n    setTerm(term);\r\n  };\r\n\r\n  const updateCommentErrors = (errors) => {\r\n    setCommentErrors(errors);\r\n  };\r\n\r\n  const submitSearch = () => {\r\n    setRestType('search');\r\n    setCurrentPage(1);\r\n    props.router.history.push('/search/' + term);\r\n  };\r\n\r\n  const updateCommentFields = (key, val) => {\r\n    setCommentFields((prevFields) => ({\r\n      ...prevFields,\r\n      [key]: val\r\n    }));\r\n  };\r\n\r\n  const submitComment = () => {\r\n    const postdata = {\r\n      post: posts[0].id,\r\n      author_name: commentFields.fullName,\r\n      author_email: commentFields.email,\r\n      author_url: commentFields.website,\r\n      content: commentFields.comment\r\n    };\r\n\r\n    Axios.post('/wp-json/wp/v2/comments', postdata)\r\n      .then((response) => {\r\n        const cmnt = response.data;\r\n        cmnt.waiting = 'Your comment is waiting approval';\r\n        setComments((prevComments) => [...prevComments, cmnt]);\r\n      })\r\n      .catch((error) => {\r\n        const err = [];\r\n        err.push(error.message);\r\n        setCommentErrors(err);\r\n      });\r\n  };\r\n\r\n  const buildUrl = () => {\r\n    let url = '/wp-json/wp/v2/';\r\n    switch (restType) {\r\n      case 'page':\r\n        url += 'pages/?slug=';\r\n        url += slug;\r\n        break;\r\n      case 'search':\r\n        url += 'search/?s=';\r\n        url += term;\r\n        url += '&page=' + currentPage;\r\n        break;\r\n      case 'category':\r\n        url += 'posts?categories=';\r\n        url += catid;\r\n        url += '&page=' + currentPage;\r\n        break;\r\n      case 'post':\r\n      default:\r\n        url += slug ? 'posts/?slug=' + slug : 'posts/?page=' + currentPage;\r\n        break;\r\n    }\r\n\r\n    return url;\r\n  };\r\n\r\n  const getComments = (id) => {\r\n    const url = '/wp-json/wp/v2/comments?post=' + id;\r\n    Axios.get(url)\r\n      .then((response) => {\r\n        setComments(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPosts = (url) => {\r\n    Axios.get(url)\r\n      .then((response) => {\r\n        setPosts(response.data);\r\n        setTotalPages(response.headers['x-wp-totalpages']);\r\n        if (route === '/post/:slug' && response.data[0]) {\r\n          getComments(response.data[0].id);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setAppError('An unexpected error occurred');\r\n      });\r\n  };\r\n\r\n  const nextClicked = () => {\r\n    setCurrentPage((prevPage) => prevPage + 1);\r\n  };\r\n\r\n  const previousClicked = () => {\r\n    setCurrentPage((prevPage) => prevPage - 1);\r\n  };\r\n\r\n  return (\r\n    <storeContext.Provider\r\n      value={{\r\n        term,\r\n        slug,\r\n        restType,\r\n        catid,\r\n        route,\r\n        posts,\r\n        comments,\r\n        currentPage,\r\n        totalPages,\r\n        commentFields,\r\n        appError,\r\n        commentErrors,\r\n        nextClicked,\r\n        previousClicked,\r\n        submitSearch,\r\n        updateTerm,\r\n        submitComment,\r\n        updateCommentFields,\r\n        updateCommentErrors\r\n      }}\r\n    >\r\n      {props.children}\r\n    </storeContext.Provider>\r\n  );\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport { Consumer } from \"./Context\";\r\nfunction WithConsumer(WrappedComponent) {\r\n  return function(props) {\r\n    return (\r\n      <Consumer>\r\n        {ctx => <WrappedComponent {...props} context={ctx} />}\r\n      </Consumer>\r\n    );\r\n  };\r\n}\r\nexport default WithConsumer;","// extracted by mini-css-extract-plugin","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            <h1>Footer</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react'; \r\nimport { Link } from 'react-router-dom';\r\nimport WithConsumer from '../context/WithConsumer';\r\nimport PostMeta from './PostMeta';\r\n\r\nconst HomePost = ({index,context}) => {\r\n    const posts = () => context.posts;\r\n    const item = posts()[index];  \r\n    \r\n    let linkPrefix = item.type === 'page' ? '/page/' : '/post/';\r\n    \r\n    let theContent = ''; \r\n    \r\n    switch(context.route){\r\n        case '/': //if homepage,\r\n        case '/search/:term': //or if search\r\n        case '/category/:catid': //or if search\r\n            theContent = item.excerpt.rendered; //show excerpt only\r\n        break;\r\n        default: //for single, pages - show entire content\r\n            theContent = item.excerpt.rendered;\r\n        break;\r\n    }   \r\n\r\n    return (\r\n        <div id={'post-id-'+item.id} className={'post-item'}>\r\n            <h1><Link to={'/wordpress'+linkPrefix+item.slug}>{item.title.rendered}</Link></h1>\r\n            <PostMeta index={index}></PostMeta>\r\n            <div className=\"post-content\" dangerouslySetInnerHTML={{__html:theContent}}></div>\r\n        </div>);\r\n\r\n};\r\nexport default WithConsumer(HomePost);","import React from \"react\";\r\nimport \"../styling/Loader.css\";\r\n\r\nexport default function Loader(props) {\r\n    return (\r\n        <div class=\"lds-spinner\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            </div>\r\n    )\r\n}","import React, { useEffect } from 'react'; \r\nimport WithConsumer from '../context/WithConsumer';\r\n\r\nconst Pager = function ({context}){\r\n \r\n    let prevBtn =  React.createRef(); \r\n    let nextBtn =  React.createRef(); \r\n    let curPage = () => context.currentPage;\r\n    let totalPages = () => context.totalPages; \r\n\r\n    useEffect(() => {\r\n        prevBtn.current.disabled = true;\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[]); \r\n    \r\n    function nextClicked(){\r\n\r\n        context.nextClicked(); \r\n\r\n        if(parseInt(totalPages()) === parseInt(curPage() + 1) ){\r\n            nextBtn.current.disabled = true;\r\n        }\r\n\r\n        prevBtn.current.disabled = false;\r\n\r\n    }\r\n\r\n    function previousClicked(){\r\n\r\n        context.previousClicked();\r\n\r\n        if(parseInt(curPage()-1) === 1 ){\r\n            prevBtn.current.disabled = true;\r\n        }\r\n\r\n        nextBtn.current.disabled = false;\r\n\r\n    }\r\n\r\n    function pagerClass(){ \r\n        let cls = 'Pager'; \r\n        if(parseInt(totalPages()) <=1 || \r\n            context.appError){\r\n            cls = 'Pager hidden';\r\n        }\r\n        return cls;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={pagerClass()}>\r\n        <button ref={prevBtn} onClick={previousClicked}>Previous</button>\r\n        <button ref={nextBtn} onClick={nextClicked}>Next</button>\r\n        <div className=\"PagerText\">Page \r\n            <span dangerouslySetInnerHTML={{__html: curPage()}}></span> of \r\n            <span dangerouslySetInnerHTML={{__html: totalPages()}}></span></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WithConsumer(Pager);","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport WithConsumer from '../context/WithConsumer';\r\nimport axios from 'axios';\r\n\r\nconst PostMeta = ({ index, context }) => {\r\n  const posts = () => context.posts;\r\n  const [author, setAuthor] = useState('');\r\n  const item = posts()[index];\r\n  const authorID = item.author;\r\n  let catLink = '';  \r\n\r\n  useEffect(() => {\r\n    const fetchAuthorByID = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost/wordpress/wp-json/wp/v2/users?user=${authorID}`\r\n        );\r\n        const data = response.data;\r\n        if (Array.isArray(data) && data.length > 0) {\r\n          setAuthor(data[0].name); // Update to access the author's name property\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchAuthorByID();\r\n  }, [authorID]);\r\n\r\n  if (item.categories) {\r\n    catLink = (\r\n      <span>\r\n        Under{' '}\r\n        <Link to={'/category/' + item.categories[0]}>{item.category_name}</Link>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  let theMeta = '';\r\n  if (item.type === 'post') {\r\n    theMeta = (\r\n      <div className=\"post-meta\">\r\n        Published: <Moment format=\"MM/DD/YYYY\">{item.date}</Moment>,\r\n        Written by {author}, {catLink}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return theMeta;\r\n};\r\n\r\nexport default WithConsumer(PostMeta);\r\n","import React from \"react\";\r\nimport {\r\n    NavLink, \r\n    Outlet\r\n} from \"react-router-dom\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst RootLayout = () => {\r\n    return (\r\n        <div className=\"root-layout\">\r\n            <header>\r\n                <nav>\r\n                    <h1 className=\"logo\">lowacase</h1>\r\n                    <NavLink to=\"/wordpress\">Home</NavLink>\r\n                    <NavLink to=\"/wordpress/about\">About</NavLink>\r\n                    <NavLink to=\"/wordpress/blog\">Blog</NavLink>\r\n                    <NavLink to=\"/wordpress/signin\">Login</NavLink>\r\n                </nav>\r\n            </header>\r\n            <main>\r\n                <Outlet />\r\n                <Footer />\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RootLayout;","import React from 'react';\r\nimport WithConsumer from '../context/WithConsumer';\r\nimport HomePost from './HomePost';\r\nimport Loader from './Loader';\r\nconst TheHomeLoop = ({ context }) => {\r\n    const posts = () => context.posts;\r\n    const pos = posts();\r\n    let results = '';\r\n    if(context.appError){\r\n      results = <div className=\"app-error\">{context.appError}</div>;\r\n    }else{\r\n      if(pos.length === 0){\r\n        results = <Loader />;\r\n      }else{\r\n        if (Array.isArray(pos)) {\r\n          results = pos.map(function(item, i) {\r\n            if (i < 3) {\r\n            return <HomePost key={i} index={i}></HomePost>;\r\n            }\r\n          });\r\n        }\r\n        \r\n      }\r\n    }\r\n    return (results);\r\n};\r\nexport default WithConsumer(TheHomeLoop);","import React from 'react';\r\nimport WithConsumer from '../context/WithConsumer';\r\nimport ThePost from './ThePost';\r\nimport Loader from './Loader';\r\nconst TheLoop = ({ context }) => {\r\n    const posts = () => context.posts;\r\n    const pos = posts();\r\n    let results = '';\r\n    if(context.appError){\r\n      results = <div className=\"app-error\">{context.appError}</div>;\r\n    }else{\r\n      if(pos.length === 0){\r\n        results = <Loader />;\r\n      }else{\r\n        if (Array.isArray(pos)) {\r\n          results = pos.map(function(item, i) {\r\n            return <ThePost key={i} index={i}></ThePost>;\r\n          });\r\n        }\r\n        \r\n      }\r\n    }\r\n    return (results);\r\n};\r\nexport default WithConsumer(TheLoop);","import React from 'react'; \r\nimport { Link } from 'react-router-dom';\r\nimport WithConsumer from '../context/WithConsumer';\r\nimport PostMeta from './PostMeta';\r\n\r\nconst ThePost = ({index,context}) => {\r\n \r\n    const posts = () => context.posts;\r\n    const item = posts()[index];  \r\n    \r\n    let linkPrefix = item.type === 'page' ? '/page/' : '/post/';\r\n    \r\n    let theContent = ''; \r\n    \r\n    switch(context.route){\r\n        case '/': //if homepage,\r\n        case '/search/:term': //or if search\r\n        case '/category/:catid': //or if search\r\n            theContent = item.excerpt.rendered; //show excerpt only\r\n        break;\r\n        default: //for single, pages - show entire content\r\n            theContent = item.excerpt.rendered;\r\n        break;\r\n    }   \r\n\r\n    return (\r\n        <div id={'post-id-'+item.id} className={'post-item'}>\r\n            <h1><Link to={'/wordpress'+linkPrefix+item.slug}>{item.title.rendered}</Link></h1>\r\n            <PostMeta index={index}></PostMeta>\r\n            <div className=\"post-content\" dangerouslySetInnerHTML={{__html:theContent}}></div>\r\n        </div>);\r\n\r\n};\r\nexport default WithConsumer(ThePost);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// extracted by mini-css-extract-plugin","import React from \"react\";\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h1>About</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport TheLoop from \"../partials/TheLoop\";\r\nimport Pager from \"../partials/Pager\";\r\nimport { Provider } from \"../context/Context\";\r\nconst Blog = (props) => {\r\n    return (\r\n        <div>\r\n             <Provider router={props}>\r\n        <div>\r\n            <h1>Blog</h1>\r\n            <TheLoop></TheLoop>\r\n            <Pager></Pager>\r\n        </div>\r\n        </Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Blog;","import React from \"react\";\r\nimport TheHomeLoop from '../partials/TheHomeLoop';\r\nimport {Provider} from '../context/Context';\r\nimport {Link} from 'react-router-dom';\r\n//import Pager from '../partials/Pager';\r\n\r\nconst Home = (props) => {\r\n    return (\r\n        <Provider router={props}>\r\n        <div>\r\n            <h1>Home</h1>\r\n            <TheHomeLoop></TheHomeLoop>\r\n            <Link to=\"/wordpress/blog\"><button type=\"button\">Visit Blog</button></Link>\r\n        </div>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>NotFound</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport WithConsumer from \"../context/WithConsumer\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../partials/Loader\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst SinglePost = ({ index, context }) => {\r\n  const { slug } = useParams();\r\n  const [post, setPost] = useState(null);\r\n  const [authorName, setAuthorName] = useState('');\r\n  const [authorID, setAuthorID] = useState(''); // Move authorID declaration here\r\n\r\n  useEffect(() => {\r\n    const fetchPostBySlug = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost/wordpress/wp-json/wp/v2/posts?slug=${slug}`\r\n        );\r\n        const data = response.data;\r\n        if (Array.isArray(data) && data.length > 0) {\r\n          setPost(data[0]);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    const fetchAuthorByID = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost/wordpress/wp-json/wp/v2/users?user=${authorID}`\r\n        );\r\n        const data = response.data;\r\n        if (Array.isArray(data) && data.length > 0) {\r\n          setAuthorName(data[0].name); // Update to access the author's name property\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchAuthorByID();\r\n\r\n    fetchPostBySlug();\r\n  }, [slug, authorID]);\r\n\r\n  if (!post) {\r\n    return <Loader />;\r\n  }\r\n\r\n  const { title, content, date, author } = post;\r\n  const theContent = content.rendered;\r\n\r\n  return (\r\n    <div>\r\n      <h1>{title.rendered}</h1>\r\n      <div className=\"post-meta\">\r\n        Published: <Moment format=\"MM/DD/YYYY\">{date}</Moment>,\r\n        Written by {authorName}\r\n      </div>\r\n      \r\n      <div\r\n        className=\"post-content\"\r\n        dangerouslySetInnerHTML={{ __html: theContent }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WithConsumer(SinglePost);\r\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;ACnhMA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;ACXA;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AChBA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;;;;;;;;;;;;;;;;;;AChpBA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;;;ACrDA;AACA;AAIA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA,eA8BA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;AC5IA;;;;;;;;;;;;;;;;ACAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;;;;;;;;;;;;;;;;AClBA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;ACVA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;;;;;;;;;;;;;;;;A","sourceRoot":""}