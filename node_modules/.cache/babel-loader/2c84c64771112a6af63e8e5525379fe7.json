{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admi\\\\Documents\\\\Xampp\\\\htdocs\\\\wordpress\\\\wp-content\\\\themes\\\\bare-bones\\\\react-src\\\\src\\\\partials\\\\PostMeta.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport WithConsumer from '../context/WithConsumer';\nimport axios from 'axios';\nconst PostMeta = _ref => {\n  let {\n    index,\n    context\n  } = _ref;\n  const posts = () => context.posts;\n  const item = posts()[index];\n  const authorID = item.author;\n  let catLink = '';\n  const [author, setAuthor] = useState('');\n  useEffect(() => {\n    const fetchAuthorByID = async () => {\n      try {\n        const response = await axios.get(`http://localhost/wordpress/wp-json/wp/v2/users?slug=${authorID}`);\n        const data = response.data;\n        if (Array.isArray(data) && data.length > 0) {\n          setAuthor(data.name); // Update to access the author's name property\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchAuthorByID();\n  }, [authorID]);\n  if (item.categories) {\n    catLink = /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, \"Under\", ' ', /*#__PURE__*/React.createElement(Link, {\n      to: '/category/' + item.categories[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, item.category_name));\n  }\n  let theMeta = '';\n  if (item.type === 'post') {\n    theMeta = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-meta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, \"Published: \", /*#__PURE__*/React.createElement(Moment, {\n      format: \"MM/DD/YYYY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }\n    }, item.date), \", Written by \", author, \", \", catLink);\n  }\n  return theMeta;\n};\nexport default WithConsumer(PostMeta);","map":{"version":3,"names":["React","useState","useEffect","Link","Moment","WithConsumer","axios","PostMeta","_ref","index","context","posts","item","authorID","author","catLink","setAuthor","fetchAuthorByID","response","get","data","Array","isArray","length","name","error","console","categories","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to","category_name","theMeta","type","className","format","date"],"sources":["C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/partials/PostMeta.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport WithConsumer from '../context/WithConsumer';\r\nimport axios from 'axios';\r\n\r\nconst PostMeta = ({ index, context }) => {\r\n  const posts = () => context.posts;\r\n  const item = posts()[index];\r\n  const authorID = item.author;\r\n\r\n  let catLink = '';\r\n  const [author, setAuthor] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchAuthorByID = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost/wordpress/wp-json/wp/v2/users?slug=${authorID}`\r\n        );\r\n        const data = response.data;\r\n        if (Array.isArray(data) && data.length > 0) {\r\n          setAuthor(data.name); // Update to access the author's name property\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchAuthorByID();\r\n  }, [authorID]);\r\n\r\n  if (item.categories) {\r\n    catLink = (\r\n      <span>\r\n        Under{' '}\r\n        <Link to={'/category/' + item.categories[0]}>{item.category_name}</Link>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  let theMeta = '';\r\n  if (item.type === 'post') {\r\n    theMeta = (\r\n      <div className=\"post-meta\">\r\n        Published: <Moment format=\"MM/DD/YYYY\">{item.date}</Moment>,\r\n        Written by {author}, {catLink}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return theMeta;\r\n};\r\n\r\nexport default WithConsumer(PostMeta);\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGC,IAAA,IAAwB;EAAA,IAAvB;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAClC,MAAMG,KAAK,GAAGA,CAAA,KAAMD,OAAO,CAACC,KAAK;EACjC,MAAMC,IAAI,GAAGD,KAAK,CAAC,CAAC,CAACF,KAAK,CAAC;EAC3B,MAAMI,QAAQ,GAAGD,IAAI,CAACE,MAAM;EAE5B,IAAIC,OAAO,GAAG,EAAE;EAChB,MAAM,CAACD,MAAM,EAAEE,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMe,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAC7B,uDAAsDN,QAAS,EAClE,CAAC;QACD,MAAMO,IAAI,GAAGF,QAAQ,CAACE,IAAI;QAC1B,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,IAAIA,IAAI,CAACG,MAAM,GAAG,CAAC,EAAE;UAC1CP,SAAS,CAACI,IAAI,CAACI,IAAI,CAAC,CAAC,CAAC;QACxB;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDR,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,IAAID,IAAI,CAACe,UAAU,EAAE;IACnBZ,OAAO,gBACLf,KAAA,CAAA4B,aAAA;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAM,OACC,EAAC,GAAG,eACTlC,KAAA,CAAA4B,aAAA,CAACzB,IAAI;MAACgC,EAAE,EAAE,YAAY,GAAGvB,IAAI,CAACe,UAAU,CAAC,CAAC,CAAE;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEtB,IAAI,CAACwB,aAAoB,CACnE,CACP;EACH;EAEA,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAIzB,IAAI,CAAC0B,IAAI,KAAK,MAAM,EAAE;IACxBD,OAAO,gBACLrC,KAAA,CAAA4B,aAAA;MAAKW,SAAS,EAAC,WAAW;MAAAV,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,aACd,eAAAlC,KAAA,CAAA4B,aAAA,CAACxB,MAAM;MAACoC,MAAM,EAAC,YAAY;MAAAX,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEtB,IAAI,CAAC6B,IAAa,CAAC,iBAChD,EAAC3B,MAAM,EAAC,IAAE,EAACC,OACnB,CACN;EACH;EAEA,OAAOsB,OAAO;AAChB,CAAC;AAED,eAAehC,YAAY,CAACE,QAAQ,CAAC"},"metadata":{},"sourceType":"module"}