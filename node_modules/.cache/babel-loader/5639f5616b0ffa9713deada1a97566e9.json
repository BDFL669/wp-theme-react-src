{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admi\\\\Documents\\\\Xampp\\\\htdocs\\\\wordpress\\\\wp-content\\\\themes\\\\bare-bones\\\\react-src\\\\src\\\\partials\\\\ThePost.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport PostMeta from \"./PostMeta\";\nconst ThePost = _ref => {\n  let {\n    index,\n    context\n  } = _ref;\n  const posts = () => context.posts;\n  const item = posts()[index];\n  let linkPrefix = item.type === 'page' ? '/page/' : '/post/';\n  let theContent = '';\n  switch (context.route) {\n    case '/wordpress': //if homepage,\n    case '/blog/:term': //or if search\n    case '/category/:catid':\n      //or if search\n      theContent = item.excerpt.rendered; //show excerpt only\n      break;\n    default:\n      //for single, pages - show entire content\n      theContent = item.content.rendered;\n      break;\n  }\n  return (\n    /*#__PURE__*/\n    //only render if there is content\n    React.createElement(\"div\", {\n      id: 'post-id-' + item.id,\n      className: 'post-item',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: linkPrefix + item.slug,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, item.title.rendered)), /*#__PURE__*/React.createElement(PostMeta, {\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-content\",\n      dangerouslySetInnerHTML: {\n        __html: theContent\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }))\n  );\n};\nexport default ThePost;","map":{"version":3,"names":["React","Link","Moment","PostMeta","ThePost","_ref","index","context","posts","item","linkPrefix","type","theContent","route","excerpt","rendered","content","createElement","id","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to","slug","title","dangerouslySetInnerHTML","__html"],"sources":["C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/partials/ThePost.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport PostMeta from \"./PostMeta\";\r\n\r\nconst ThePost = ({index,context}) => {\r\n    const posts = () => context.posts;\r\n    const item = posts()[index];\r\n    let linkPrefix = item.type === 'page' ? '/page/' : '/post/';\r\n    let theContent = '';\r\n    switch(context.route){\r\n        case '/wordpress': //if homepage,\r\n        case '/blog/:term': //or if search\r\n        case '/category/:catid': //or if search\r\n            theContent = item.excerpt.rendered; //show excerpt only\r\n        break;\r\n        default: //for single, pages - show entire content\r\n            theContent = item.content.rendered;\r\n        break;\r\n    }\r\n    return (\r\n        //only render if there is content\r\n        <div id={'post-id-'+item.id} className={'post-item'}>\r\n            <h1><Link to={linkPrefix+item.slug}>{item.title.rendered}</Link></h1>\r\n            <PostMeta index={index}></PostMeta>\r\n            <div className=\"post-content\" dangerouslySetInnerHTML={{__html:theContent}}></div>\r\n        </div>);\r\n};\r\n\r\nexport default ThePost;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAEjC,MAAMC,OAAO,GAAGC,IAAA,IAAqB;EAAA,IAApB;IAACC,KAAK;IAACC;EAAO,CAAC,GAAAF,IAAA;EAC5B,MAAMG,KAAK,GAAGA,CAAA,KAAMD,OAAO,CAACC,KAAK;EACjC,MAAMC,IAAI,GAAGD,KAAK,CAAC,CAAC,CAACF,KAAK,CAAC;EAC3B,IAAII,UAAU,GAAGD,IAAI,CAACE,IAAI,KAAK,MAAM,GAAG,QAAQ,GAAG,QAAQ;EAC3D,IAAIC,UAAU,GAAG,EAAE;EACnB,QAAOL,OAAO,CAACM,KAAK;IAChB,KAAK,YAAY,CAAC,CAAC;IACnB,KAAK,aAAa,CAAC,CAAC;IACpB,KAAK,kBAAkB;MAAE;MACrBD,UAAU,GAAGH,IAAI,CAACK,OAAO,CAACC,QAAQ,CAAC,CAAC;MACxC;IACA;MAAS;MACLH,UAAU,GAAGH,IAAI,CAACO,OAAO,CAACD,QAAQ;MACtC;EACJ;EACA;IAAA;IACI;IACAf,KAAA,CAAAiB,aAAA;MAAKC,EAAE,EAAE,UAAU,GAACT,IAAI,CAACS,EAAG;MAACC,SAAS,EAAE,WAAY;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAChDzB,KAAA,CAAAiB,aAAA;MAAAG,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAAIzB,KAAA,CAAAiB,aAAA,CAAChB,IAAI;MAACyB,EAAE,EAAEhB,UAAU,GAACD,IAAI,CAACkB,IAAK;MAAAP,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEhB,IAAI,CAACmB,KAAK,CAACb,QAAe,CAAK,CAAC,eACrEf,KAAA,CAAAiB,aAAA,CAACd,QAAQ;MAACG,KAAK,EAAEA,KAAM;MAAAc,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAW,CAAC,eACnCzB,KAAA,CAAAiB,aAAA;MAAKE,SAAS,EAAC,cAAc;MAACU,uBAAuB,EAAE;QAACC,MAAM,EAAClB;MAAU,CAAE;MAAAQ,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAM,CAChF;EAAC;AACd,CAAC;AAED,eAAerB,OAAO"},"metadata":{},"sourceType":"module"}