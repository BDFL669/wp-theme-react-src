{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admi\\\\Documents\\\\Xampp\\\\htdocs\\\\wordpress\\\\wp-content\\\\themes\\\\bare-bones\\\\react-src\\\\src\\\\context\\\\Context.js\";\nimport React from \"react\";\nimport Axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\n\n//context api:  \n//https://medium.com/datadriveninvestor/getting-started-w-reacts-context-api-f60aa9be758f\n\nconst storeContext = React.createContext();\nconst routeParams = useParams();\nexport const Consumer = storeContext.Consumer;\nexport class Provider extends React.Component {\n  constructor(props) {\n    super(props);\n    let restType = this.getRestType(routeParams.path);\n    let route = routeParams.path;\n    let slug = routeParams.slug ? routeParams.slug : '';\n    let term = routeParams.term ? routeParams.term : '';\n    let catid = routeParams.catid ? routeParams.catid : '';\n    this.state = {\n      term: term,\n      slug: slug,\n      restType: restType,\n      catid: catid,\n      route: route,\n      posts: [],\n      comments: [],\n      currentPage: 1,\n      totalPages: 0,\n      commentFields: {\n        fullName: '',\n        email: '',\n        website: '',\n        comment: ''\n      },\n      appError: '',\n      commentErrors: [],\n      //global methods\n      nextClicked: this.nextClicked.bind(this),\n      previousClicked: this.previousClicked.bind(this),\n      submitSearch: this.submitSearch.bind(this),\n      updateTerm: this.updateTerm.bind(this),\n      submitComment: this.submitComment.bind(this),\n      updateCommentFields: this.updateCommentFields.bind(this),\n      updateCommentErrors: this.updateCommentErrors.bind(this)\n    };\n  }\n  getRestType(path) {\n    let restType = 'post';\n    switch (path) {\n      case '/page/:slug':\n        restType = 'page';\n        break;\n      case '/search/:term':\n        restType = 'search';\n        break;\n      case '/category/:catid':\n        restType = 'category';\n        break;\n      case '/post/:slug':\n      default:\n        restType = 'post';\n        break;\n    }\n    return restType;\n  }\n  componentDidMount() {\n    this.getPosts(this.buildUrl());\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.router.location.pathname !== this.props.router.location.pathname) {\n      let curProps = this.props.router.match;\n      this.setState({\n        currentPage: 1,\n        restType: this.getRestType(curProps.path),\n        catid: curProps.params.catid ? curProps.params.catid : ''\n      }, function () {\n        this.getPosts(this.buildUrl());\n      });\n    }\n  }\n  updateTerm(term) {\n    this.setState({\n      term: term\n    });\n  }\n  updateCommentErrors(errors) {\n    this.setState({\n      commentErrors: errors\n    });\n  }\n  submitSearch() {\n    this.setState({\n      restType: 'search',\n      currentPage: 1\n    });\n    this.props.router.history.push('/search/' + this.state.term);\n  }\n  updateCommentFields(key, val) {\n    //TO UPDATE NESTED STATE:\n    //https://stackoverflow.com/questions/43040721/how-to-update-nested-state-properties-in-react\n    var commentFields = {\n      ...this.state.commentFields\n    };\n    commentFields[key] = val;\n    this.setState({\n      commentFields\n    });\n  }\n  submitComment() {\n    // console.log(this.state);\n    let postdata = {\n      'post': this.state.posts[0].id,\n      'author_name': this.state.commentFields.fullName,\n      'author_email': this.state.commentFields.email,\n      'author_url': this.state.commentFields.website,\n      'content': this.state.commentFields.comment\n    };\n    let self = this;\n    Axios.post('/wp-json/wp/v2/comments', postdata).then(response => {\n      let cmnt = response.data;\n      cmnt.waiting = 'Your comment is waiting approval';\n      let cmnts = self.state.comments;\n      cmnts.push(cmnt);\n      self.setState({\n        comments: cmnts\n      });\n    }).catch(function (error) {\n      let err = [];\n      err.push(error.message);\n      self.setState({\n        commentErrors: err\n      });\n    });\n  }\n  buildUrl() {\n    let url = '/wp-json/wp/v2/';\n    switch (this.state.restType) {\n      case 'page':\n        url += 'pages/?slug=';\n        url += this.state.slug;\n        break;\n      case 'search':\n        url += 'search/?s=';\n        url += this.state.term;\n        url += '&page=' + this.state.currentPage;\n        break;\n      case 'category':\n        url += 'posts?categories=';\n        url += this.state.catid;\n        url += '&page=' + this.state.currentPage;\n        break;\n      case 'post':\n      default:\n        url += this.state.slug ? 'posts/?slug=' + this.state.slug : 'posts/?page=' + this.state.currentPage;\n        break;\n    }\n    return url;\n  }\n  getComments(id) {\n    let url = '/wp-json/wp/v2/comments?post=' + id;\n    let self = this;\n    Axios.get(url).then(response => {\n      self.setState({\n        comments: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n  getPosts(url) {\n    let self = this;\n    Axios.get(url).then(response => {\n      self.setState({\n        posts: response.data,\n        totalPages: response.headers['x-wp-totalpages']\n      }, function () {\n        //get comments if post, and post array is not empty       \n        if (self.state.route === '/post/:slug' && self.state.posts[0]) {\n          self.getComments(self.state.posts[0].id);\n        }\n      });\n    }).catch(function (error) {\n      console.log(error);\n      self.appError = 'An unexpected error occurred';\n    });\n  }\n  nextClicked() {\n    let newPage = this.state.currentPage + 1;\n    this.setState({\n      currentPage: newPage\n    }, function () {\n      this.getPosts(this.buildUrl());\n    });\n  }\n  previousClicked() {\n    let newPage = this.state.currentPage - 1;\n    this.setState({\n      currentPage: newPage\n    }, function () {\n      this.getPosts(this.buildUrl());\n    });\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(storeContext.Provider, {\n      value: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n}","map":{"version":3,"names":["React","Axios","useParams","storeContext","createContext","routeParams","Consumer","Provider","Component","constructor","props","restType","getRestType","path","route","slug","term","catid","state","posts","comments","currentPage","totalPages","commentFields","fullName","email","website","comment","appError","commentErrors","nextClicked","bind","previousClicked","submitSearch","updateTerm","submitComment","updateCommentFields","updateCommentErrors","componentDidMount","getPosts","buildUrl","componentDidUpdate","prevProps","router","location","pathname","curProps","match","setState","params","errors","history","push","key","val","postdata","id","self","post","then","response","cmnt","data","waiting","cmnts","catch","error","err","message","url","getComments","get","console","log","headers","newPage","render","createElement","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","children"],"sources":["C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/context/Context.js"],"sourcesContent":["import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n//context api:  \r\n//https://medium.com/datadriveninvestor/getting-started-w-reacts-context-api-f60aa9be758f\r\n\r\nconst storeContext = React.createContext();\r\nconst routeParams = useParams();\r\nexport const Consumer = storeContext.Consumer;\r\n\r\nexport class Provider extends React.Component {\r\n  constructor(props) {\r\n    super(props); \r\n \r\n    let restType = this.getRestType(routeParams.path);\r\n    let route = routeParams.path;\r\n    let slug = routeParams.slug ? routeParams.slug : '';\r\n    let term = routeParams.term ? routeParams.term : '';\r\n    let catid = routeParams.catid ? routeParams.catid : ''; \r\n\r\n    this.state = {\r\n      term : term,\r\n      slug : slug,\r\n      restType : restType,\r\n      catid : catid,\r\n      route : route,\r\n      posts : [], \r\n      comments : [],\r\n      currentPage : 1, \r\n      totalPages : 0,      \r\n      commentFields : { \r\n        fullName : '', \r\n        email : '', \r\n        website : '', \r\n        comment : ''\r\n      },\r\n      appError : '',\r\n      commentErrors : [],\r\n      //global methods\r\n      nextClicked : this.nextClicked.bind(this), \r\n      previousClicked : this.previousClicked.bind(this), \r\n      submitSearch : this.submitSearch.bind(this), \r\n      updateTerm : this.updateTerm.bind(this), \r\n      submitComment : this.submitComment.bind(this), \r\n      updateCommentFields : this.updateCommentFields.bind(this),\r\n      updateCommentErrors : this.updateCommentErrors.bind(this)\r\n    };\r\n \r\n  }\r\n\r\n  getRestType (path){\r\n    let restType = 'post';     \r\n    switch(path){\r\n      case '/page/:slug':\r\n        restType = 'page';\r\n        break;\r\n      case '/search/:term':\r\n        restType = 'search';\r\n        break;\r\n      case '/category/:catid':\r\n        restType = 'category';\r\n        break;\r\n      case '/post/:slug':\r\n      default:\r\n        restType = 'post';\r\n        break;\r\n    }\r\n    return restType;\r\n  }\r\n \r\n  componentDidMount(){   \r\n    this.getPosts(this.buildUrl());      \r\n  }\r\n\r\n  componentDidUpdate(prevProps){ \r\n    if(prevProps.router.location.pathname !== this.props.router.location.pathname){  \r\n      let curProps = this.props.router.match;       \r\n      this.setState({\r\n        currentPage : 1, \r\n        restType : this.getRestType(curProps.path), \r\n        catid : curProps.params.catid ? curProps.params.catid : ''\r\n      },function(){\r\n        this.getPosts(this.buildUrl()); \r\n      })\r\n      \r\n    } \r\n  }\r\n\r\n  updateTerm (term){\r\n    this.setState({\r\n      term : term\r\n    })\r\n  }\r\n\r\n  updateCommentErrors (errors){\r\n    this.setState({\r\n      commentErrors : errors\r\n    })\r\n  }\r\n\r\n  submitSearch(){      \r\n    this.setState({\r\n      restType : 'search',  \r\n      currentPage : 1\r\n    });\r\n\r\n    this.props.router.history.push('/search/'+this.state.term);\r\n  }\r\n\r\n  updateCommentFields (key,val){\r\n    //TO UPDATE NESTED STATE:\r\n    //https://stackoverflow.com/questions/43040721/how-to-update-nested-state-properties-in-react\r\n    var commentFields = {...this.state.commentFields}\r\n    commentFields[key] = val;\r\n    this.setState({commentFields})   \r\n  }\r\n\r\n  submitComment(){\r\n    // console.log(this.state);\r\n    let postdata = {\r\n      'post' : this.state.posts[0].id,\r\n      'author_name' : this.state.commentFields.fullName, \r\n      'author_email' : this.state.commentFields.email,\r\n      'author_url' : this.state.commentFields.website, \r\n      'content' : this.state.commentFields.comment\r\n    }\r\n\r\n    let self = this;\r\n\r\n    Axios.post('/wp-json/wp/v2/comments',postdata).then((response)=>{     \r\n\r\n      let cmnt = response.data; \r\n      cmnt.waiting = 'Your comment is waiting approval';\r\n      let cmnts = self.state.comments;\r\n      cmnts.push(cmnt);\r\n      self.setState({\r\n        comments : cmnts \r\n      })      \r\n    }).catch(function(error){  \r\n      let err = [];\r\n      err.push(error.message);\r\n      self.setState({\r\n        commentErrors : err\r\n      })\r\n    }); \r\n\r\n  }\r\n\r\n  buildUrl(){\r\n    let url = '/wp-json/wp/v2/';    \r\n    switch(this.state.restType){      \r\n      case 'page': \r\n        url += 'pages/?slug=';\r\n        url += this.state.slug\r\n      break;\r\n      case 'search': \r\n        url += 'search/?s=';\r\n        url += this.state.term;\r\n        url += '&page=' + this.state.currentPage;\r\n      break;\r\n      case 'category': \r\n        url += 'posts?categories=';\r\n        url += this.state.catid;\r\n        url += '&page=' + this.state.currentPage;\r\n      break;      \r\n      case 'post': \r\n      default:      \r\n        url += this.state.slug ? 'posts/?slug=' + this.state.slug : 'posts/?page=' + this.state.currentPage;\r\n        break;      \r\n    }\r\n\r\n    return url;\r\n  }\r\n\r\n  getComments(id){\r\n    let url = '/wp-json/wp/v2/comments?post=' + id;\r\n    let self = this;\r\n    Axios.get(url).then((response)=>{       \r\n      self.setState({\r\n        comments : response.data \r\n      })      \r\n    }).catch(function(error){\r\n      console.log(error);\r\n    }); \r\n  }\r\n\r\n  getPosts (url){\r\n    let self = this;\r\n    Axios.get(url).then((response)=>{\r\n      self.setState({\r\n        posts : response.data, \r\n        totalPages : response.headers['x-wp-totalpages']\r\n      },function(){          \r\n        //get comments if post, and post array is not empty       \r\n        if(self.state.route === '/post/:slug' \r\n          && self.state.posts[0]){           \r\n          self.getComments(self.state.posts[0].id);\r\n        }  \r\n      })      \r\n    }).catch(function(error){\r\n      console.log(error);\r\n      self.appError = 'An unexpected error occurred';\r\n    });  \r\n  }\r\n\r\n\r\n  nextClicked (){ \r\n    let newPage = this.state.currentPage + 1;    \r\n    this.setState({\r\n      currentPage : newPage\r\n    },function(){\r\n      this.getPosts(this.buildUrl());\r\n    })   \r\n  }\r\n\r\n\r\n  previousClicked (){\r\n    let newPage = this.state.currentPage - 1;    \r\n    this.setState({\r\n      currentPage : newPage\r\n    },function(){\r\n      this.getPosts(this.buildUrl());\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <storeContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </storeContext.Provider>\r\n    );\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}