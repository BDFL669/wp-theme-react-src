{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admi\\\\Documents\\\\Xampp\\\\htdocs\\\\wordpress\\\\wp-content\\\\themes\\\\bare-bones\\\\react-src\\\\src\\\\context\\\\Context.js\";\nimport React from \"react\";\nimport { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\n//we need to initialize the context\nconst storeContext = React.createContext();\nexport const Consumer = storeContext.Consumer;\nconst routerParams = useParams();\nconsole.log(routerParams);\nexport const Provider = _ref => {\n  let {\n    routerParams,\n    children\n  } = _ref;\n  const [slug, setSlug] = useState(routerParams.slug ? routerParams.slug : '');\n  const [restType, setRestType] = useState(getRestType(routerParams.path));\n  const [route, setRoute] = useState(routerParams.path);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    setPosts(['title', 'title2']);\n  }, []);\n  useEffect(() => {\n    // Code for componentDidUpdate goes here...\n  }, []);\n  const getRestType = path => {\n    // Function logic for getRestType goes here...\n  };\n  return /*#__PURE__*/React.createElement(storeContext.Provider, {\n    value: {\n      slug,\n      restType,\n      route,\n      posts\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"names":["React","useEffect","useState","useParams","storeContext","createContext","Consumer","routerParams","console","log","Provider","_ref","children","slug","setSlug","restType","setRestType","getRestType","path","route","setRoute","posts","setPosts","createElement","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/admi/Documents/Xampp/htdocs/wordpress/wp-content/themes/bare-bones/react-src/src/context/Context.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\n//we need to initialize the context\r\nconst storeContext = React.createContext();\r\nexport const Consumer = storeContext.Consumer;\r\n\r\n\r\nconst routerParams = useParams();\r\nconsole.log(routerParams);\r\n\r\n\r\nexport const Provider = ({ routerParams, children }) => {\r\n  const [slug, setSlug] = useState(routerParams.slug ? routerParams.slug : '');\r\n  const [restType, setRestType] = useState(getRestType(routerParams.path));\r\n  const [route, setRoute] = useState(routerParams.path);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setPosts(['title', 'title2']);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Code for componentDidUpdate goes here...\r\n  }, []);\r\n\r\n  const getRestType = (path) => {\r\n    // Function logic for getRestType goes here...\r\n  };\r\n\r\n  return (\r\n    <storeContext.Provider value={{ slug, restType, route, posts }}>\r\n      {children}\r\n    </storeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C;AACA,MAAMC,YAAY,GAAGJ,KAAK,CAACK,aAAa,CAAC,CAAC;AAC1C,OAAO,MAAMC,QAAQ,GAAGF,YAAY,CAACE,QAAQ;AAG7C,MAAMC,YAAY,GAAGJ,SAAS,CAAC,CAAC;AAChCK,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;AAGzB,OAAO,MAAMG,QAAQ,GAAGC,IAAA,IAAgC;EAAA,IAA/B;IAAEJ,YAAY;IAAEK;EAAS,CAAC,GAAAD,IAAA;EACjD,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAACK,YAAY,CAACM,IAAI,GAAGN,YAAY,CAACM,IAAI,GAAG,EAAE,CAAC;EAC5E,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAACe,WAAW,CAACV,YAAY,CAACW,IAAI,CAAC,CAAC;EACxE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAACK,YAAY,CAACW,IAAI,CAAC;EACrD,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdqB,QAAQ,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAENrB,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,EAAE,CAAC;EAEN,MAAMgB,WAAW,GAAIC,IAAI,IAAK;IAC5B;EAAA,CACD;EAED,oBACElB,KAAA,CAAAuB,aAAA,CAACnB,YAAY,CAACM,QAAQ;IAACc,KAAK,EAAE;MAAEX,IAAI;MAAEE,QAAQ;MAAEI,KAAK;MAAEE;IAAM,CAAE;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC5DlB,QACoB,CAAC;AAE5B,CAAC"},"metadata":{},"sourceType":"module"}